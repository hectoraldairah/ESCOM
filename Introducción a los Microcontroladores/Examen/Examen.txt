Notas:
	- El ATMega48 funciona a 8MHz
	- Se utilizarán 3 display cátodo (se activan con '1' y los segmentos se activan con '0')
	- El puerto B (8 bits) se utiliza para mandar los datos a los displays multiplexados (manda '0's para prender los segmentos)
		=> PORTB = |P|G|F|E|D|C|B|A|
	- El puerto C (7 bits) se utiliza para multiplexar los transistores 2N2222 (utilizados para multiplexar cátodos). La sincronización se hace de derecha a izquierda
		=>PORTC = |X|X|X|X|1|1|1| // Solamente necesitamos los 3 primeros bits menos significativos. Las 'X' son bits que nos importan una mierda :D
			=> PORTD0 := Controla el display 0
			=> PORTD1 := Controla el display 1
			=> PORTD2 := Controla el display 2
	- El puerto D (8 bits) se utiliza para las interrupciones externas y para recibir datos del dip-switch (http://www.electronics-base.com/avr-tutorials/external-interrupts/107-avr-external-interrupts-int0-example)
		=> PORTD = |S|S|S|S|B|B|X|X| // S: Dip-Switch; B = Push Buttons
			=> PORTD2 := Este push button desplaza el punto decimal (INT0)
			=> PORTD3 := Este push button muestra el valor actual del Dip-Switch en el display que tenga el punto decimal (INT1)

Programa (pseudocódigo)
	// Includes
	// Definiciones de registros
		ww_registro_transistor // Indica el transistor a activar
		ww_registro_punto // Indica la posición actual del punto decimal
		ww_registro_valordisplay // Indica el valor del display actual, que se escribe inmediatamente al puerto de salida B
		ww_registro_dipswitch // Almacena el valor del dip-switch
	// Vectores de interrupción
	inicializarPrograma()
	{
		// Inicializar pila (github.com/ww/ESCOM => Introducción a los Microcontroladores => Práctica5)
		// Configurar los Data Direction Registers (definir entradas o salidas puertos) => PORTB = salida, PORTC = salida, PORTD = entrada
		// Configurar timer para sincronizar transistores (aparentemente uno de 8 bits es suficiente); esto es indicar su valor inicial, modo de operación y prescaler
		// Configurar interrupciones externas en INT0 e INT1
		// Habilitar interrupciones globales
	}
	ejecutar()
	{
		// Asignar 0b00000001 al registro ww_registro_transistor
		// Asignar 0b00000001 al registro ww_registro_punto

		// Asignar símbolo '-' al registro ww_registro_valordisplay (considerando que se usan display cátodo, por lo que los LEDs encienden con '0')

		// Arrancar timer
	}

	// Interrupciones
	habilitarTransistor() // Este segmento de código se ejecuta cuando el Timer produce una interrupción (alcanza su valor máximo en el registro TimeCounter TNCT)
	{
		// Si el registro ww_registro_transistor no es igual al registro ww_registro_punto, entonces asignar '-' al registro ww_registro_valordisplay
		// Si el registro ww_registro_transistor es igual al registro ww_registro_punto, entonces append símbolo '.' al registro ww_registro_valordisplay (utilizar OR)
		// Escribir el valor del registro ww_registro_transistor a PORTC (Para habilitar el transistor del display actual)
			// En este punto puede que sea necesario algunos NOPs adicionales para ganar tiempo de recuperación de alimentación del circuito para evitar posible ruido o algún mame por el estilo
		// Escribir el valor del registro ww_registro_valordisplay a PORTB
		// Desplazar valor del registro ww_registro_transistor un bit a la izquierda. Considerar que si su valor actual es 0b00000100 entonces tomará el nuevo valor de 0b00000001
	}
	cambiarPosicionPunto() // Se ejecuta cuando se produce la interrupción INT0
	{
		// Desplazar valor del registro ww_registro_punto un bit a la izquierda. Considerar que si su valor actual es 0b00000100 entonces tomará el nuevo valor de 0b00000001
	}
	leerDatoDipSwitch() // Se ejecuta cuando se produce la interrupción INT1
	{
		// Leer valor del puerto D (solo dip-switch) y asignar valor al registro ww_registro_dipswitch
		// Si el valor de ww_registro_dipswitch es 0b00000000, asignar el valor correspondiente (0) a ww_registro_transistor
		....
		// Si el valor de ww_registro_dipswitch es 0b00001001, asignar el valor correspondiente (9) a ww_registro_transistor
		// Si el valor de ww_registro_dipswitch no es alguno de los anteriores, asignar el valor correspondiente (-) a ww_registro_transistor
	}

	// Subrutinas (utilizar en condiciones dentro de las interrupciones)
		// Para valores de display (0-9), etc.